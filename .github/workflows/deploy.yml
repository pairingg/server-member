name: Gradle Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Chmod Gradle
        run: chmod 744 gradlew

        # 🔥 GitHub Secret에서 application-dev.yaml 복원
      - name: Restore application-dev.yaml
        run: |
          echo "${{ secrets.APPLICATION_SECRET_YAML }}" | base64 --decode > src/main/resources/application-dev.yaml

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:latest

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Docker Push
        run: docker push ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:latest

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          port: 22
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PASSWORD }}
          script: |
            docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:latest
            docker stop ${{secrets.DOCKER_REPO}} || true
            docker rm ${{secrets.DOCKER_REPO}} || true
            docker run -d --name ${{secrets.DOCKER_REPO}} -p 8081:8081 ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:latest

      - name: Connect to Private Compute and Pull Docker Image
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRIVATE_COMPUTE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export HTTP_PROXY=http://${{ secrets.HOST }}:3128/
            export HTTPS_PROXY=http://${{ secrets.HOST }}:3128/
            docker pull alpine